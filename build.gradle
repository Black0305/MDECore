// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies.classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://maven.epoxide.xyz"
    }
    maven {
        url "http://maven.amadornes.com/"
    }
	maven {
		url "http://tehnut.info/maven"
	}
}

version = "1.12-1.1.0"
group = "com.mattdahepic.mdecore" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mdecore"

sourceCompatibility = targetCompatibility = "1.8"
compileJava { sourceCompatibility = targetCompatibility = "1.8" }

minecraft {
    version = "1.12.1-14.22.0.2455"
    runDir = "run"
    mappings = "snapshot_20170815"
	useDepAts = true
	
    replace "@VERSION@", project.version
    replaceIn "MDECore.java"
}

jar.manifest {
    attributes 'FMLCorePlugin': 'com.mattdahepic.mdecore.asm.MDECoreMod', 'FMLCorePluginContainsFMLMod': 'true'
}

dependencies {
	deobfCompile "mezz.jei:jei_1.12:4.7.3.+:api"
    runtime "mezz.jei:jei_1.12:4.7.3.+"
	deobfCompile "mcp.mobius.waila:Hwyla:1.8.20-B35_1.12:api"
	runtime "mcp.mobius.waila:Hwyla:1.8.20-B35_1.12"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives devJar
}

apply plugin: 'idea'
idea.module.inheritOutputDirs = true;